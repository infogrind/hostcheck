#!/bin/bash

# Ping timeout in seconds
TIMEOUT=3

# Formatting (use "echo -e")
OK="\033[32m✔\033[0m"
NOK="\033[31m✘\033[0m"

SITES="$*"

if [ -z "$SITES" ]; then
	echo "Syntax: $0 <host>, <host>, ..."
	exit 1
fi

function pinghost() {
	HOST="$1"
	ping -c 1 -t "$TIMEOUT" "$1" > /dev/null 2>&1
}

function urlexists() {
	curl --output /dev/null --silent --head --fail \
		-m "$TIMEOUT" "$1"
}

function ssid() {
	AIRPORT="/System/Library/PrivateFrameworks/"
	AIRPORT="${AIRPORT}Apple80211.framework/Versions"
	AIRPORT="${AIRPORT}/Current/Resources/airport"
	#"$AIRPORT" -I  2>&1 | sed 's/SSID/Gurk/'
	"$AIRPORT" -I | awk '/ SSID/ { print $2 }'
}

function print_env() {

	echo "Environment"
	echo "------------------------------"
	echo "Wi-Fi network: $(ssid)"
	echo "PROXY:         $PROXY"
	echo "http_proxy:    $http_proxy"
	echo "https_proxy:   $https_proxy"
	echo ""
}

echo ""
print_env

echo "Host		Ping	URL (http)"
echo "------------------------------------"

for host in $SITES; do

	# To compute number of tabs for alignment
	LEN=${#host}
	T=$(($LEN / 8))
	TABS=$((2 - $T))

	echo -n "$host"
	for ((i=0; i < $TABS; i++)); do
		echo -ne "\t"
	done

	if pinghost "$host"; then
		STATUS="$OK"
	else
		STATUS="$NOK"
	fi
	echo -en "$STATUS\t"

	URL="http://$host"
	if urlexists "$URL"; then
		STATUS="$OK"
	else
		STATUS="$NOK"
	fi
	echo -e $STATUS
done

echo ""
