#!/bin/bash

# Ping timeout in seconds
TIMEOUT=3

# Formatting (use "echo -e")
# Use color only if we are within a terminal.
# https://stackoverflow.com/a/26761733/319282
if [ -t 1 ]; then
	OK="\033[32m✔\033[0m"
	NOK="\033[31m✘\033[0m"
else
	OK="✔"
	NOK="✘"
fi

SITES="$*"

if [ -z "$SITES" ]; then
	echo "Syntax: `basename $0` <host> [, <host>, ...]"
	exit 1
fi

function pinghost() {
	HOST="$1"
	ping -c 1 -t "$TIMEOUT" "$1" > /dev/null 2>&1
}

function urlexists() {
	curl --output /dev/null --silent --fail \
		-m "$TIMEOUT" "$1"
}

testdns() {
	HOST="$1"
	host "$1" > /dev/null
}


function ssid() {
	AIRPORT="/System/Library/PrivateFrameworks/"
	AIRPORT="${AIRPORT}Apple80211.framework/Versions"
	AIRPORT="${AIRPORT}/Current/Resources/airport"

	if [ -x "$AIRPORT" ]; then
		"$AIRPORT" -I | awk '/ SSID/ { print $2 }'
	else
		echo "(SSID detection not supported on this system)"
	fi
}

function print_env() {

	echo "Environment"
	echo "----------------------------------------------------------"
	echo "Wi-Fi network:		$(ssid)"
	echo "PROXY:			${PROXY:-(not set)}"
	echo "http_proxy:		${http_proxy:-(not set)}"
	echo "https_proxy:		${https_proxy:-(not set)}"
	echo ""
}

echo ""
print_env

echo "Host			DNS	Ping	http	https"
echo "----------------------------------------------------------"

for host in $SITES; do

	# To compute number of tabs for alignment
	LEN=${#host}
	T=$(($LEN / 8))
	TABS=$((3 - $T))

	echo -n "$host"
	for ((i=0; i < $TABS; i++)); do
		echo -ne "\t"
	done

	if testdns "$host"; then
		echo -en "$OK\t"
	else
		echo -e "$NOK\t-\t-"
		continue
	fi

	if pinghost "$host"; then
		STATUS="$OK"
	else
		STATUS="$NOK"
	fi
	echo -en "$STATUS\t"

	URL="http://$host"
	if urlexists "$URL"; then
		STATUS="$OK"
	else
		STATUS="$NOK"
	fi
	echo -en "$STATUS\t"

	URL="https://$host"
	if urlexists "$URL"; then
		STATUS="$OK"
	else
		STATUS="$NOK"
	fi
	echo -e $STATUS
done

echo ""
